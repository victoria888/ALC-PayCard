<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Mini App</title>
    <style>
      body {
        margin: 0;
        padding: 1em;
        background-color: #ffffff;
      }
      
      [data-cart-info],
      [data-credit-card] {
        transform: scale(0.78);
    	margin-left: -3.4em;
      }

      [data-cc-info] input:focus,
      [data-cc-digits] input:focus {
        outline: none;
      }

      .mdc-card__primary-action,
      .mdc-card__primary-action:hover {
        cursor: auto;
        padding: 20px;
        min-height: inherit;
      }
      
      [data-credit-card] [data-card-type] {
        transition: width 1.5s;
        margin-left: calc(100% - 130px);
      }

      [data-credit-card].is-visa {
        background: linear-gradient(135deg, #622774 0%, #c53364 100%);
      }

      [data-credit-card].is-mastercard {
        background: linear-gradient(135deg, #65799b 0%, #5e2563 100%);
      }

      .is-visa [data-card-type],
      .is-mastercard [data-card-type] {
        width: auto;
      }

      input.is-invalid,
      .is-invalid input {
        text-decoration: line-through;
      }

      ::placeholder {
        color: #fff;
      }
      [data-cart-info] span{
        display: inline-block;
        vertical-align: middle;
      }
      span.material-icons{
        font-size: 150px;
      }
      [data-credit-card]{
        width: 435px;
        min-height: 240px;
        border-radius: 10px;
        background-color: #5d6874;
      }
      [data-card-type]{
        display: block;
        width: 120px;
        height: 60px;
      }
      [data-cc-digits]{
        margin-top: 2em;
      }
      [data-cc-digits] input{
        color: #fff;
        font-size: 2em;
        line-height: 2em;
        border: 0;
        background: none;
        margin-right: 0.5em;
      }
      [data-cc-info]{
        margin-top: 1em;
      }
      [data-cc-info] input{
        color: #fff;
        font-size: 1.2em;
        border: 0;
        background: none;
      }
      [data-cc-info] input[placeholder="MM/YY"]{
        padding-right: 10px;
        float: right;
      }
      [data-pay-btn]{
        position: fixed;
        width: 90%;
        border: 1px solid;
        bottom: 20px;
      }
    
    </style>
  </head>
  <body>
    <div data-cart-info> 
      <h4 class="mdc-typography--headline4">
        <span class="material-icons">shopping_cart</span>
        <span data-bill></span>
      </h4>
    </div>
    <div data-credit-card class="mdc-card mdc-card--outlined">
      <div class="mdc-card__primary-action">
        <img data-card-type src="https://placehold.it/120x60.png?text=Card">
        <div data-cc-digits>
          <input type="text" size=4 placeholder="----">
          <input type="text" size=4 placeholder="----">
          <input type="text" size=4 placeholder="----">
          <input type="text" size=4 placeholder="----">
        </div>
        <div data-cc-info>
          <input type="text" size=20 placeholder="Name Surname">
          <input type="text" size=6 placeholder="MM/YY">
        </div>
      </div>
    </div>
    <button class="mdc-button" data-pay-btn>Pay & Checkout Now</button>
    
    <script>
      const supportedCards = {
        visa, mastercard
      };
      const countries = [
        {
          code: "US",
          currency: "USD",
          country: 'United States'
        },
        {
          code: "NG",
          currency: "NGN",
          country: 'Nigeria'
        },
        {
          code: 'KE',
          currency: 'KES',
          country: 'Kenya'
        },
        {
          code: 'UG',
          currency: 'UGX',
          country: 'Uganda'
        },
        {
          code: 'RW',
          currency: 'RWF',
          country: 'Rwanda'
        },
        {
          code: 'TZ',
          currency: 'TZS',
          country: 'Tanzania'
        },
        {
          code: 'ZA',
          currency: 'ZAR',
          country: 'South Africa'
        },
        {
          code: 'CM',
          currency: 'XAF',
          country: 'Cameroon'
        },
        {
          code: 'GH',
          currency: 'GHS',
          country: 'Ghana'
        }
      ];
      const appState={};
      
      const formatAsMoney=(amount, buyerCountry)=>{
        const countryName = countries.find(k => k.country === buyerCountry);
        if(countryName){
          return amount.toLocaleString('en-' + countryName.code, {style: 'currency', currency: countryName.currency});
        }else {
          return amount.toLocaleString('en-US', {style: 'currency', currency:'USD'});
        }
      };
      
      const flagIfInvalid=(field, isValid)=>{
        if(isValid){
          field.classList.remove('is-invalid');
        }else{
          field.classList.add('is-invalid');
        }
      };
	  
      const expiryDateFormatIsValid=(target)=>{
        const datStr = target;
        //const reg = /\d{2}\/\d{2}/; 
        const reg = /^(0[1-9])|(1[0-2])[\/](\d{2})/;
        const test = datStr.match(reg);
        if(test){
          return true
        }else{
          return false
        }
      };
      
      const detectCardType =({target})=> {
        const cardtype = target.value;
        if(cardtype.startsWith('4')){
          document.querySelector('[data-credit-card]').classList.add('is-visa');
          document.querySelector('[data-credit-card]').classList.remove('is-mastercard');
          document.querySelector('[data-card-type]').src = supportedCards.visa;
          return 'is-visa';
        }else if(cardtype.startsWith('5')){
          document.querySelector('[data-credit-card]').classList.remove('is-visa');
          document.querySelector('[data-credit-card]').classList.add('is-mastercard');
          document.querySelector('[data-card-type]').src = supportedCards.mastercard;
          return 'is-mastercard';
        }
      };
      
      const validateCardExpiryDate=({target})=>{
        //target = document.querySelector("[data-cc-info] input[placeholder = 'MM/YY']");
        const validDateFormat = expiryDateFormatIsValid(target.value);
        let result= false;
        
        if(validDateFormat){
          const cardDate = target.value.split('/');
          const cardMonth = cardDate[0];
          const cardYear = '20' + cardDate[1];
          const date =new Date();
          const expirydate =new Date();
          const expiryYear = expirydate.setFullYear(cardYear, cardMonth, 1);
          if(expirydate < date){
            result = false;
          }else{
            result = true;
          }
        }
        flagIfInvalid(target, result)
        return result;
       
      };
      
      const validateCardHolderName=({target})=>{
        target= document.querySelector("[data-cc-info] input:nth-child(1)");
        const val = target.value;
        const regName = /^[a-z] {3,}\s[a-z]{3,}$/;
         const field = val.split(' ');
       if (field.length == 2){
        
        if(field[0].length < 3 || field[1].length < 3){
          flagIfInvalid(target, false)
          return false;
        }else
       { 
       flagIfInvalid(target, true)
        return true;
       }}
        else{
         flagIfInvalid(target, false)
         return false;
       }
      };
      
      const validateWithLuhn=(digits)=>{
   		let value = digits.join("");
        if (/[^0-9-\s]+/.test(value)){
          return false;
        }
       
        let nCheck = 0;
        let nDigit = 0;
        let bEven = 0;
        value = value.replace(/\D/g, "");
        
        for(let n = value.length - 1; n>= 0; n--){
          let cDigit = value.charAt(n);
          let nDigit = parseInt(cDigit, 10);
          if(bEven){
            if ((nDigit *= 2) > 9){
              nDigit -= 9;
            } 
          }
          nCheck += nDigit;
          bEven = !bEven;
        }
        return (nCheck % 10) == 0;
      };
      const validateCardNumber=()=>{
        const inputone = document.querySelector('[data-cc-digits] > input:nth-child(1)').value.split("");
        const inputtwo = document.querySelector('[data-cc-digits] > input:nth-child(2)').value.split("");
        const inputthree = document.querySelector('[data-cc-digits] > input:nth-child(3)').value.split("");
        const inputfour = document.querySelector('[data-cc-digits] > input:nth-child(4)').value.split("");
        const cardNumber = inputone.concat(inputtwo, inputthree, inputfour);
        const valNum = validateWithLuhn(cardNumber);
        console.log(valNum);
        if(valNum){
          document.querySelector('[data-cc-digits]').classList.remove('is-invalid');
          return true;
        }else{
          document.querySelector('[data-cc-digits]').classList.add('is-invalid');
          return false;
        }
      };
      const uiCanInteract=()=>{
        let inputCardOne = document.querySelector('[data-cc-digits] > input:nth-child(1)');
        inputCardOne.addEventListener('blur', detectCardType);
        
        let valCardHolderName = document.querySelector('[data-cc-info] > input:nth-child(1)');
        valCardHolderName.addEventListener('blur', validateCardHolderName);
        
        let valExpiryDate = document.querySelector("[data-cc-info] input[placeholder = 'MM/YY']");
        valExpiryDate.addEventListener('blur', validateCardExpiryDate);
        
        let valCardNumber = document.querySelector('button');
        valCardNumber.addEventListener('click', validateCardNumber);
        
        inputCardOne.focus();
      };
      
      const displayCartTotal=({results})=>{
        const [data] = results;
        const {itemsInCart, buyerCountry} = data;
        appState.items  = itemsInCart;
        appState.country = buyerCountry;
        appState.bill = itemsInCart.reduce((total, item) =>  total + (item.price * item.qty), 0);
        appState.billFormatted = formatAsMoney(appState.bill, appState.country);
        document.querySelector("[data-bill]").textContent = appState.billFormatted;
        uiCanInteract();
      };
      
      const fetchBill =()=>{
        const api = "https://randomapi.com/api/006b08a801d82d0c9824dcfdfdfa3b3c";
          fetch(api)
            .then((response) => response.json())
            .then((data) => displayCartTotal(data))
            .catch(err => console.log(err))
      };
      
      const startApp = () => {
        fetchBill();
      };

      startApp();
    </script>
  </body>
</html>

4929416075118388
